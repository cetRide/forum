<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use ReflectionClass;

class Thread extends Model
{
    use RecordActivity;

    protected $fillable = [
        'channel_id', 'user_id', 'title', 'body',
    ];
    protected $guarded = [];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
//        static::addGlobalScope('replyCount', function ($builder) {
//            $builder->withCount('replies');
//        });
        static::deleting(function ($thread) {
            $thread->replies->each->delete();
        });
    }

    public
    function path()
    {
        return "/threads/{$this->channel->slug}/{$this->id}";
    }

    public
    function replies()
    {
        return $this->hasMany(Reply::class)
            ->withCount('favorites')
            ->with('owner');
    }

    public
    function creator()
    {
        return $this->belongsTo(User::class, 'user_id');
    }

    public
    function channel()
    {
        return $this->belongsTo('App\Channel', 'channel_id');
    }

    public
    function addReply($reply)
    {
        return $this->replies()->create($reply);
    }

    public
    function scopeFilter($query, $filters)
    {
        return $filters->apply($query);
    }

}
